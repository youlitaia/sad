
（1）软件工程的定义

答：软件工程是1.将系统化的、规范的、可度量的方法应用于软件的开发、运行、维护，即将工程化的方法应用于软件，2.在1中所述方法的研究。



（2）解释导致software crisis本质原因，表现，述说克服软件危机的方法

答：软件危机是指，由于计算机性能和问题复杂度的快速增长，导致现有的软件开发方法效率不足。
本质原因是硬件和软件的总体复杂度上升。
表现在以下几个方面：1.项目超出预算、 2.项目超出预期时间、3.软件效率很低、4.软件质量低劣、5.软件难以满足需求、6.软件难以管理和维护、7.软件未曾交付。
克服危机的方式：运用软件生命周期的模型，发展出软件开发和维护阶段适用的技术和方法，并应用于软件工程的实践。



（3）软件生命周期

答：软件生命周期是软件从产生到报废或停止使用的生命周期，周期内有问题定义、可行性分析、总体描述、系统设计、编码、调试和测试、验收与运行、维护升级、废弃等阶段。



（4）SWEBoK的15个知识域

答：SWEBoK，Software Engineer Body of Knowledge，15个知识域如下：

1、软件需求				9、软件工程模型与方法
2、软件设计				10、软件质量
3、软件构建				11、软件工程专业训练
4、软件测试				12、软件工程经济学
5、软件维护				13、计算基础
6、软件配置管理			14、工程基础
7、软件工程管理			15、数学基础
8、软件工程过程





（5）简单解释CMMI的五个级别

答：Capability Maturity Model Integration，能力成熟度模型集成。

Level 1：initial，软件过程无序，控制程度低，管理是反应式的；
Level 2：managed，建立了基本的项目管理过程来跟踪费用、进度和功能特性。制定了必要的过程纪律，能重复早先类似应用项目取得的成功经验。
Level 3：defined，已将软件管理和工程两方面的过程文档化、标准化，并综合成该组织的标准软件过程。所有项目均使用经批准、剪裁的标准软件过程来开发和维护软件，软件产品的生产在整个软件过程是可见的。
Level 4：quantitatively，分析对软件过程和产品质量的详细度量数据，对软件过程和产品都有定量的理解与控制。管理有一个作出结论的客观依据，管理能够在定量的范围内预测性能。
Level 5：optimizing，过程的量化反馈和先进的新思想、新技术促使过程持续不断改进。



（6）用自己语言简述SWEBok或CMMI

CMMI，将现存的所有软件工程开发中的能力熟练度模型集中到一个框架模型中去，主要思想是：在开发过程中，持续努力地建立有效的软件工程的结构，不断地实践和改进，就能克服开发过程中的困难。 CMMI主要从成本效益、突出重点、过程集中、灵活性出发来考虑。它使得企业开发软件的过程变得规范化、标准化，能保证软件开发的质量与进度。
